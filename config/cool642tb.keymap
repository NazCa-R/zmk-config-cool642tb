#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R  &kp T                                &kp Y           &kp U  &kp I      &kp O       &kp P
&mt LCTRL A       &kp S         &kp D         &kp F  &kp G        &none  &none            &kp H           &kp J  &kp K      &kp L       &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V  &kp B        &none  &none            &kp N           &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 3  &lt 2 SPACE  &mo 1  &lt 1 LA(GRAVE)  &kp LEFT_SHIFT                                &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        asLay3 {
            bindings = <
&kp TAB          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS                  &kp MINUS       &kp EQUAL  &kp INT3   &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &trans  &trans  &kp BACKSPACE   &mkp LCLK  &mkp RCLK  &kp SQT           &kp NON_US_HASH
&kp KP_ASTERISK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &trans  &trans  &kp KP_NUMLOCK  &trans     &trans     &kp SEMICOLON     &kp INTERNATIONAL_1
&kp LS(MINUS)    &kp KP_NUMBER_0  &kp KP_DOT       &kp TAB          &none         &trans  &trans  &kp LEFT_SHIFT                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Lay2 {
            bindings = <
&kp N1          &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6          &kp N7     &kp N8     &kp N9    &kp N0
&kp LCTRL       &trans  &trans  &trans  &trans  &trans  &trans  &trans          &mkp LCLK  &mkp RCLK  &mkp MB3  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &mkp MB4   &trans     &mkp MB5  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_SHIFT                                  &trans
            >;
        };

        asLay1 {
            bindings = <
&kp TAB         &kp F7    &kp F8    &kp F9  &kp F10                  &trans     &kp HOME  &kp UP    &kp END    &trans
&kp LCTRL       &kp F4    &kp F5    &kp F6  &kp F11  &trans  &trans  &kp BSPC   &kp LEFT  &kp DOWN  &kp RIGHT  &kp DELETE
&kp LEFT_SHIFT  &kp F1    &kp F2    &kp F3  &kp F12  &trans  &trans  &trans     &trans    &trans    &trans     &trans
&kp LCTRL       &kp LGUI  &kp LALT  &trans  &trans   &trans  &trans  &kp LSHFT                                 &kp ESC
            >;
        };
    };
};
